local players = game:WaitForChild("Players")
local playerF = players.LocalPlayer
local playerW = playerF.Name

game:GetService("ReplicatedStorage").Security.RemoteEvent:Destroy() game:GetService("ReplicatedStorage").Security[""]:Destroy()
game:GetService("ReplicatedStorage").Security:Destroy() game:GetService("Players").LocalPlayer.PlayerScripts.Client.DeviceChecker:Destroy()

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local ToggleOFF = Instance.new("TextButton")
local ToggleF = Instance.new("TextButton")
local ToggleFOFF = Instance.new("TextButton")
local ToggleZ = Instance.new("TextButton")
local ToggleZOFF = Instance.new("TextButton")
local TextBox = Instance.new("TextBox")
local aliveFolder = workspace:WaitForChild("Alive")
local ballsFolder = workspace:WaitForChild("Balls")
local run = game:GetService("RunService")
local sim = run.Heartbeat
local sim2 = run.PreRender
local realBall = nil
local realPlayer = nil
local realOther = nil
local rootpart = nil
local otherf = nil
local othern = nil
local targ = nil
local focus = nil
local focused = nil
local rootparto = nil
local otherc = nil
local otherp = nil
local pre = nil
local pre2 = nil
local pre3 = nil
local pre4 = nil
local pre5 = nil
local contador = 0
local spam = false
local tg = true
local args
local parry = game:GetService("SocialService"):WaitForChild("\n\n\n\n\n\n\n\n")

print("sucesss run")

ScreenGui.Parent = game:GetService('CoreGui')
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.2012012, 0, 0.343128483, 0)
Frame.Size = UDim2.new(0, 215, 0, 85)

Toggle.Name = "Toggle"
Toggle.Parent = Frame
Toggle.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.02012012, 0, 0.5103128483, 0)
Toggle.Size = UDim2.new(0, 100, 0, 35)
Toggle.Visible = true
Toggle.Font = Enum.Font.Bodoni
Toggle.Text = "spam"
Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
Toggle.TextSize = 33.000
Toggle.TextWrapped = true
Toggle.MouseButton1Click:Connect(function()
    Toggle.Visible = false
    ToggleOFF.Visible = true
end)

ToggleOFF.Name = "ToggleOFF"
ToggleOFF.Parent = Frame
ToggleOFF.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
ToggleOFF.BorderColor3 = Color3.fromRGB(0, 0, 0)
ToggleOFF.BorderSizePixel = 0
ToggleOFF.Position = UDim2.new(0.02012012, 0, 0.5103128483, 0)
ToggleOFF.Size = UDim2.new(0, 100, 0, 35)
ToggleOFF.Visible = false
ToggleOFF.Font = Enum.Font.Bodoni
ToggleOFF.Text = "unspam"
ToggleOFF.TextColor3 = Color3.fromRGB(0, 0, 0)
ToggleOFF.TextSize = 33.000
ToggleOFF.TextWrapped = true
ToggleOFF.MouseButton1Click:Connect(function()
    ToggleOFF.Visible = false
    Toggle.Visible = true
end)

ToggleF.Name = "Toggle"
ToggleF.Parent = Frame
ToggleF.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
ToggleF.BorderColor3 = Color3.fromRGB(0, 0, 0)
ToggleF.BorderSizePixel = 0
ToggleF.Position = UDim2.new(0.510012012, 0, 0.5103128483, 0)
ToggleF.Size = UDim2.new(0, 100, 0, 35)
ToggleF.Visible = true
ToggleF.Font = Enum.Font.Bodoni
ToggleF.Text = "active"
ToggleF.TextColor3 = Color3.fromRGB(0, 0, 0)
ToggleF.TextSize = 33.000
ToggleF.TextWrapped = true
ToggleF.MouseButton1Click:Connect(function()
    ToggleF.Visible = false
    ToggleFOFF.Visible = true
end)

ToggleFOFF.Name = "ToggleOFF"
ToggleFOFF.Parent = Frame
ToggleFOFF.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
ToggleFOFF.BorderColor3 = Color3.fromRGB(0, 0, 0)
ToggleFOFF.BorderSizePixel = 0
ToggleFOFF.Position = UDim2.new(0.510012012, 0, 0.5103128483, 0)
ToggleFOFF.Size = UDim2.new(0, 100, 0, 35)
ToggleFOFF.Visible = false
ToggleFOFF.Font = Enum.Font.Bodoni
ToggleFOFF.Text = "disable"
ToggleFOFF.TextColor3 = Color3.fromRGB(0, 0, 0)
ToggleFOFF.TextSize = 33.000
ToggleFOFF.TextWrapped = true
ToggleFOFF.MouseButton1Click:Connect(function()
    ToggleFOFF.Visible = false
    ToggleF.Visible = true
end)

TextBox.Parent = Frame
TextBox.PlaceholderText = "player focus"
TextBox.Size = UDim2.new(0, 100, 0, 35)
TextBox.Position = UDim2.new(0.510012012, 0, 0.053128483, 0)
TextBox.Text = ""
TextBox.Visible = true
TextBox.Font = Enum.Font.SourceSans
TextBox.TextSize = 24
TextBox.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBox.BorderSizePixel = 1

ToggleF.MouseButton1Click:Connect(function()
focus = TextBox.Text
end)

ToggleFOFF.MouseButton1Click:Connect(function()
focus = nil
otherf = nil
end)

ToggleZ.Name = "Toggle"
ToggleZ.Parent = Frame
ToggleZ.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
ToggleZ.BorderColor3 = Color3.fromRGB(0, 0, 0)
ToggleZ.BorderSizePixel = 0
ToggleZ.Position = UDim2.new(0.02012012, 0, 0.053128483, 0)
ToggleZ.Size = UDim2.new(0, 100, 0, 35)
ToggleZ.Visible = true
ToggleZ.Font = Enum.Font.Bodoni
ToggleZ.Text = "parry"
ToggleZ.TextColor3 = Color3.fromRGB(0, 0, 0)
ToggleZ.TextSize = 33.000
ToggleZ.TextWrapped = true
ToggleZ.MouseButton1Click:Connect(function()
    ToggleZ.Visible = false
    ToggleZOFF.Visible = true
end)

ToggleZOFF.Name = "ToggleOFF"
ToggleZOFF.Parent = Frame
ToggleZOFF.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
ToggleZOFF.BorderColor3 = Color3.fromRGB(0, 0, 0)
ToggleZOFF.BorderSizePixel = 0
ToggleZOFF.Position = UDim2.new(0.02012012, 0, 0.053128483, 0)
ToggleZOFF.Size = UDim2.new(0, 100, 0, 35)
ToggleZOFF.Visible = false
ToggleZOFF.Font = Enum.Font.Bodoni
ToggleZOFF.Text = "unparry"
ToggleZOFF.TextColor3 = Color3.fromRGB(0, 0, 0)
ToggleZOFF.TextSize = 33.000
ToggleZOFF.TextWrapped = true
ToggleZOFF.MouseButton1Click:Connect(function()
    ToggleZOFF.Visible = false
    ToggleZ.Visible = true
end)

local function newBall()
local balls = ballsFolder:GetChildren()
realBall = nil
for _, ball in ipairs(balls) do
if ball:GetAttribute("realBall") == true then
realBall = ball
targ = realBall:GetAttribute("target")
break
end
end
end

local function newPlay()
local alive = aliveFolder:GetChildren()
realPlayer = nil
for _, ply in ipairs(alive) do
if ply.Name == playerW then
realPlayer = ply
rootpart = ply:FindFirstChild("HumanoidRootPart")
break
end
end
end

local function newOther()
local alive = aliveFolder:GetChildren()
realOther = nil
local others = {}
for _, other in pairs(alive) do
if other.Name ~= playerW then
table.insert(others,other)
realOther = other
end
break
end
end

local function newOtherFocus()
local alive = aliveFolder:GetChildren()
for _, other in ipairs(alive) do
if other.Name == othern then
focused = other
rootparto = focused:FindFirstChild("HumanoidRootPart")
otherc = rootparto.CFrame
otherp = otherc.Position
break
end
end
end

local function argsAct()
if realPlayer and realPlayer.Parent and focus == nil then
args = {
    [1] = 0.5,
    [2] = rootpart.CFrame + Vector3.new(0, 0, -60),
    [3] = {
        ["42634634334"] = rootpart.CFrame.Position + Vector3.new(0, 0, -60)
    },
    [4] = {
        [1] = 795.5,
        [2] = 152.5
    },
    [5] = false
}
end
if focused and focused.Parent and focus ~= nil then
local alive = players:GetChildren()
for _, other in ipairs(alive) do
if other.Name == focus or other.DisplayName == focus then
otherf = other
othern = otherf.Name
args = {
    [1] = 0.5,
    [2] = otherc,
    [3] = {
        [othern] = otherp
    },
    [4] = {
        [1] = 795.5,
        [2] = 152.5
    },
    [5] = false
}
break
end
end
end
end

newBall()
newPlay()
newOther()

local function checkNoMiss()
if not realBall or not realPlayer or not realOther then return end
local ball = realBall
local ply = realPlayer
local opponent = realOther
local ballVelocity = ball.Velocity.Magnitude
local playerTorso = ply.HumanoidRootPart
local opponentTorso = opponent.HumanoidRootPart
local distanceToBall = (playerTorso.Position - ball.Position).Magnitude
local opponentDistance = (playerTorso.Position - opponentTorso.Position).Magnitude
local requiredDistance = 30 + (ballVelocity / 2 - distanceToBall / 3.5)
local spamDistance = 30 + (ballVelocity / 10)
local spamDistanceLimit = 35 + (ballVelocity / 10)
local safeDistance = 25 + (ballVelocity / 9)
if targ ~= playerW then
tg = true
end
if tg == true and distanceToBall <= requiredDistance then
if targ == playerW then
parry:FireServer(unpack(args))
tg = false
end
end
if distanceToBall <= spamDistance and opponentDistance <= safeDistance and (distanceToBall <= spamDistanceLimit) then
if targ == playerW then
contador = contador + 1
if contador >= 2 then
spam = true
end
else
contador = 0
end
else
spam = false
contador = 0
end
end

local function newAll()
newBall()
newPlay()
newOther()
checkNoMiss()
end

local function newFocus()
newOtherFocus()
argsAct()
end

Toggle.MouseButton1Click:Connect(function()
pre = sim2:Connect(function()
if realPlayer and realPlayer.Parent then
parry:FireServer(unpack(args))
end
end)
pre2 = sim2:Connect(function()
if realPlayer and realPlayer.Parent then
parry:FireServer(unpack(args))
end
end)
end)

ToggleOFF.MouseButton1Click:Connect(function()
pre:Disconnect()
pre2:Disconnect()
end)

ToggleZ.MouseButton1Click:Connect(function()
pre3 = sim:Connect(newAll)
pre4 = sim2:Connect(newFocus)
pre5 = sim2:Connect(function()
if spam == true and realBall and realBall.Parent and realOther and realOther.Parent and realPlayer and realPlayer.Parent then
parry:FireServer(unpack(args))
end
end)
end)

ToggleZOFF.MouseButton1Click:Connect(function()
pre3:Disconnect()
pre4:Disconnect()
pre5:Disconnect()
end)

Frame.Active = true
Frame.Draggable = true
