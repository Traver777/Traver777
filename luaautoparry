local players = game.Players
local playerF = players.LocalPlayer
local playerW = playerF.Name

game:GetService("ReplicatedStorage").Security.RemoteEvent:Destroy() game:GetService("ReplicatedStorage").Security[""]:Destroy()
game:GetService("ReplicatedStorage").Security:Destroy() game:GetService("Players").LocalPlayer.PlayerScripts.Client.DeviceChecker:Destroy()

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Toggle = Instance.new("TextButton")
local ToggleOFF = Instance.new("TextButton")
local ToggleZ = Instance.new("TextButton")
local ToggleZOFF = Instance.new("TextButton")
local aliveFolder = workspace:WaitForChild("Alive")
local ballsFolder = workspace:WaitForChild("Balls")
local run = game:GetService("RunService")
local sim = run.PostSimulation
local sim2 = run.PreRender
local realBall = nil
local realPlayer = nil
local realOther = nil
local targ = nil
local rootpart = nil
local pre = nil
local pre2 = nil
local pre3 = nil
local pre4 = nil
local pre5 = nil
local contador = 0
local spam = false
local tg = true
local args
local parry = game:GetService("SocialService"):WaitForChild("\n\n\n\n\n\n\n\n")
local name = tostring(math.random(20000,21000))
local ghz = math.random(-40,-20)
print("sucesss run")

ScreenGui.Parent = game:GetService('CoreGui')
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.2012012, 0, 0.343128483, 0)
Frame.Size = UDim2.new(0, 115, 0, 85)

Toggle.Name = "Toggle"
Toggle.Parent = Frame
Toggle.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0.067012012, 0, 0.5103128483, 0)
Toggle.Size = UDim2.new(0, 100, 0, 35)
Toggle.Visible = true
Toggle.Font = Enum.Font.Bodoni
Toggle.Text = "spam"
Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
Toggle.TextSize = 33.000
Toggle.TextWrapped = true
Toggle.MouseButton1Click:Connect(function()
Toggle.Visible = false
ToggleOFF.Visible = true
end)

ToggleOFF.Name = "ToggleOFF"
ToggleOFF.Parent = Frame
ToggleOFF.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
ToggleOFF.BorderColor3 = Color3.fromRGB(0, 0, 0)
ToggleOFF.BorderSizePixel = 0
ToggleOFF.Position = UDim2.new(0.067012012, 0, 0.5103128483, 0)
ToggleOFF.Size = UDim2.new(0, 100, 0, 35)
ToggleOFF.Visible = false
ToggleOFF.Font = Enum.Font.Bodoni
ToggleOFF.Text = "unspam"
ToggleOFF.TextColor3 = Color3.fromRGB(0, 0, 0)
ToggleOFF.TextSize = 33.000
ToggleOFF.TextWrapped = true
ToggleOFF.MouseButton1Click:Connect(function()
ToggleOFF.Visible = false
Toggle.Visible = true
end)

ToggleZ.Name = "Toggle"
ToggleZ.Parent = Frame
ToggleZ.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
ToggleZ.BorderColor3 = Color3.fromRGB(0, 0, 0)
ToggleZ.BorderSizePixel = 0
ToggleZ.Position = UDim2.new(0.067012012, 0, 0.053128483, 0)
ToggleZ.Size = UDim2.new(0, 100, 0, 35)
ToggleZ.Visible = true
ToggleZ.Font = Enum.Font.Bodoni
ToggleZ.Text = "parry"
ToggleZ.TextColor3 = Color3.fromRGB(0, 0, 0)
ToggleZ.TextSize = 33.000
ToggleZ.TextWrapped = true
ToggleZ.MouseButton1Click:Connect(function()
    ToggleZ.Visible = false
    ToggleZOFF.Visible = true
end)

ToggleZOFF.Name = "ToggleOFF"
ToggleZOFF.Parent = Frame
ToggleZOFF.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
ToggleZOFF.BorderColor3 = Color3.fromRGB(0, 0, 0)
ToggleZOFF.BorderSizePixel = 0
ToggleZOFF.Position = UDim2.new(0.067012012, 0, 0.053128483, 0)
ToggleZOFF.Size = UDim2.new(0, 100, 0, 35)
ToggleZOFF.Visible = false
ToggleZOFF.Font = Enum.Font.Bodoni
ToggleZOFF.Text = "unparry"
ToggleZOFF.TextColor3 = Color3.fromRGB(0, 0, 0)
ToggleZOFF.TextSize = 33.000
ToggleZOFF.TextWrapped = true
ToggleZOFF.MouseButton1Click:Connect(function()
    ToggleZOFF.Visible = false
    ToggleZ.Visible = true
end)

local function newBall()
local balls = ballsFolder:GetChildren()
realBall = nil
for _, ball in ipairs(balls) do
if ball:GetAttribute("realBall") == true then
realBall = ball
targ = realBall:GetAttribute("target")
break
end
end
end

local function newPlay()
local alive = aliveFolder:GetChildren()
realPlayer = nil
for _, ply in ipairs(alive) do
if ply.Name == playerW then
realPlayer = ply
rootpart = ply:FindFirstChild("HumanoidRootPart")
break
end
end
end

local function newOther()
local alive = aliveFolder:GetChildren()
realOther = nil
local others = {}
for _, other in pairs(alive) do
if other.Name ~= playerW then
table.insert(others,other)
realOther = other
break
end
end
end

local function argsAct()
    if realPlayer then
        local basePosition = rootpart.CFrame.Position
        local offsetPosition = Vector3.new(0, 0, ghz)
        local finalPosition = basePosition + offsetPosition
        args = {
            0.5,
            CFrame.new(0, 0, -10) * CFrame.Angles(math.rad(45), 0, 0),
            {[name] = finalPosition},
            {795.5, 152.5},
            false
        }
    end
end

newBall()
newPlay()
newOther()
argsAct()

local function checkNoMiss()
if not (realBall and realPlayer and realOther) then
return
end
local ballVelocity = realBall.Velocity.Magnitude
local playerPos = realPlayer.HumanoidRootPart.Position
local ballPos = realBall.Position
local opponentPos = realOther.HumanoidRootPart.Position
local distanceToBall = (playerPos - ballPos).Magnitude
local opponentDistance = (playerPos - opponentPos).Magnitude
local ballDirection = realBall.Velocity.Unit
local toBallDirection = (ballPos - playerPos).Unit
local isBallApproaching = ballDirection:Dot(toBallDirection) > 0
local dynamicDistance = ballVelocity * 0.47619 - distanceToBall * 0.25
local requiredDistance = 25 + dynamicDistance
local spamDistance = 30 + ballVelocity * 0.11111
local spamDistanceLimit = 35 + ballVelocity * 0.1
local safeDistance = 25 + ballVelocity * 0.125
local ballReq = 20 + ballVelocity * 0.5
if targ ~= playerW then
tg = true
end
if tg and isBallApproaching then
local velocityCheck = (ballVelocity > 35 and distanceToBall <= requiredDistance) or
(ballVelocity <= 35 and distanceToBall <= ballReq)
if velocityCheck and targ == playerW then
parry:FireServer(unpack(args))
tg = false
end
end
local inSpamZone = distanceToBall <= spamDistance and opponentDistance <= safeDistance
local inSpamLimit = distanceToBall <= spamDistanceLimit
if inSpamZone and inSpamLimit then
contador = (targ == playerW) and ((contador or 0) + 1) or 0
spam = contador >= 2
else
spam = false
contador = 0
end
end

local function newAll()
newBall()
newPlay()
newOther()
argsAct()
checkNoMiss()
end

Toggle.MouseButton1Click:Connect(function()
pre = sim2:Connect(function()
if realPlayer and realPlayer.Parent then
parry:FireServer(unpack(args))
end
end)
pre2 = sim2:Connect(function()
if realPlayer and realPlayer.Parent then
parry:FireServer(unpack(args))
end
end)
end)

ToggleOFF.MouseButton1Click:Connect(function()
pre:Disconnect()
pre2:Disconnect()
end)

ToggleZ.MouseButton1Click:Connect(function()
pre3 = sim:Connect(newAll)
pre4 = sim2:Connect(function()
if spam == true and realBall and realBall.Parent and realOther and realOther.Parent and realPlayer and realPlayer.Parent then
parry:FireServer(unpack(args))
end
end)
pre5 = sim2:Connect(function()
if spam == true and realBall and realBall.Parent and realOther and realOther.Parent and realPlayer and realPlayer.Parent then
parry:FireServer(unpack(args))
end
end)
end)

ToggleZOFF.MouseButton1Click:Connect(function()
pre3:Disconnect()
pre4:Disconnect()
pre5:Disconnect()
end)

Frame.Active = true
Frame.Draggable = true
